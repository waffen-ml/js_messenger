    public Segment findInnerSegment(Circle circle, Point centreOfWindow){ //находит отрезок данного отрезка, лежащий в окружности
        Point[] res = new Point[2];
        if(circle.getCentre().distance(p1)<circle.getR() && circle.getCentre().distance(p2)<circle.getR())
            return new Segment(p1, p2, centreOfWindow);
        else if(!is_cross(circle))
            return null;
        
        double a = super.getA();
        double b = super.getB();
        double c = super.getC();
        double x0 = circle.getCentre().getX();
        double y0 = circle.getCentre().getY();
        double r = circle.getR();
        
        if(Math.abs(a/b)>1){
           double d_4 = (b*c + x0*a*b - a*a*y0)*(b*c + x0*a*b - a*a*y0) - (a*a+b*b)*(c*c + 2*x0*a*c + x0*x0*a*a + y0*y0*a*a - r*r*a*a);
           res[0] = new Point(super.getX((int) newY1), (-(b*c + x0*a*b-a*a*y0)+Math.sqrt(d_4))/(a*a+b*b));
           res[1] = new Point(super.getX((int) newY2), (-(b*c + x0*a*b-a*a*y0)-Math.sqrt(d_4))/(a*a+b*b));
        }
        else{
            double d_4 = (a*c + y0*a*b - b*b*x0)*(a*c + y0*a*b - b*b*x0) - (a*a+b*b)*(c*c + 2*y0*b*c + y0*y0*b*b + x0*x0*b*b - r*r*b*b);
            res[0] = new Point((-(a*c + y0*a*b-b*b*x0)+Math.sqrt(d_4))/(a*a+b*b),super.getY((int) newX1));
            res[1] = new Point((-(a*c + y0*a*b-b*b*x0)-Math.sqrt(d_4))/(a*a+b*b),super.getY((int) newX2));
        }
            }
            if(!on_segment(res[0])){
                if(p1.distance(circle.getCentre())<circle.getR())
                    res[0] = p1;
                else
                    res[0] = p2;
            }
            else if(!on_segment(res[1])){
                    if(p1.distance(circle.getCentre())<circle.getR()){
                        res[1] = p1;
                    else
                        res[1] = p2;
            }
        return new Segment(res[0], res[1], centreOfWindow); // res[0] ближе к центру чем res[1]
}